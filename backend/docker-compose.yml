services:
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    tmpfs: "/zktmp"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: productdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    image: node:18-alpine
    container_name: backend
    working_dir: /app
    volumes:
      - .:/app
    command: sh -c "npm install && npm run dev"
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@db:5432/productdb
      PORT: 8080
      LOW_STOCK_THRESHOLD: 5
      USE_KAFKA: true
      KAFKA_BROKERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    tty: true
    stdin_open: true
    restart: unless-stopped

volumes:
  pgdata:
